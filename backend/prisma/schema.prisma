generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Enum สำหรับกำหนดบทบาท
enum Role {
  TEACHER
  STUDENT
}

// 1. โมเดล User เป็นศูนย์กลาง
model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  username  String  @unique
  email     String  @unique
  password  String
  role      Role    @default(STUDENT) // กำหนดค่าเริ่มต้นเป็น STUDENT

  // สำหรับ TEACHER: รายการ Todolist ที่ตนเองได้สร้างไว้
  createdTodolists Todolist[]

  createdAt DateTime? @default(now())
  
  // Profile models (สามารถคงไว้เหมือนเดิมได้)
  studentProfile StudentProfile?
  teacherProfile TeacherProfile?
}

// 2. โมเดล Todolist จะผูกกับผู้สร้างที่เป็น Teacher เท่านั้น
model Todolist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())

  // ความสัมพันธ์ไปยัง TEACHER ผู้สร้าง
  creatorId String @db.ObjectId
  creator   User   @relation(fields: [creatorId], references: [id])

  // รายละเอียดของ Todolist
  details TodolistDetail[]
}

// 3. โมเดลอื่นๆ ที่เกี่ยวข้อง
model StudentProfile {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  studentIdNumber String @unique
  userId          String @unique @db.ObjectId
  user            User   @relation(fields: [userId], references: [id])
}

model TeacherProfile {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  department String
  userId     String  @unique @db.ObjectId
  user       User    @relation(fields: [userId], references: [id])
}

model TodolistDetail {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  todolistId  String   @db.ObjectId
  todolist    Todolist @relation(fields: [todolistId], references: [id])
}